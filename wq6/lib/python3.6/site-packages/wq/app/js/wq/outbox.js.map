{"version":3,"file":"outbox.js","sources":["../../node_modules/@wq/outbox/src/outbox.js"],"sourcesContent":["import ds from '@wq/store';\nimport model from '@wq/model';\nimport { convert } from '../vendor/json-forms';\nimport { createOffline, offlineConfig, RESET_STATE, busy } from './offline';\n\nconst { discard: defaultDiscard, retry: defaultRetry } = offlineConfig;\n\nconst REMOVE_ITEMS = '@@REMOVE_OUTBOX_ITEMS',\n    RETRY_ITEMS = '@@RETRY_OUTBOX_ITEMS',\n    POST = 'POST',\n    DELETE = 'DELETE',\n    SUBMIT = 'SUBMIT',\n    SUCCESS = 'SUCCESS',\n    UPDATE = 'UPDATE',\n    ERROR = 'ERROR',\n    FORM_SUBMIT = 'FORM_SUBMIT',\n    FORM_SUCCESS = 'FORM_SUCCESS',\n    FORM_ERROR = 'FORM_ERROR',\n    BATCH_SUBMIT = '@@BATCH_SUBMIT',\n    BATCH_SUCCESS = '@@BATCH_SUCCESS',\n    BATCH_ERROR = '@@BATCH_ERROR',\n    ON_SUCCESS = 'ON_SUCCESS',\n    IMMEDIATE = 'IMMEDIATE',\n    LOCAL_ONLY = 'LOCAL_ONLY';\n\nvar _outboxes = {};\n\nclass Outbox {\n    constructor(store) {\n        _outboxes[store.name] = this;\n        this.store = store;\n        store.outbox = this;\n        const { middleware, enhanceReducer, enhanceStore } = createOffline({\n            ...offlineConfig,\n            effect: (effect, action) => this._effect(effect, action),\n            discard: (error, action, retries) =>\n                this._discard(error, action, retries),\n            retry: (action, retries) => this._retry(action, retries),\n            queue: {\n                enqueue: (array, item, context) =>\n                    this._enqueue(array, item, context),\n                dequeue: (array, item, context) =>\n                    this._dequeue(array, item, context),\n                peek: (array, item, context) => this._peek(array, item, context)\n            },\n            persist: false // Handled in store\n        });\n        store.addMiddleware(middleware);\n        store.addEnhanceReducer(\n            'offline',\n            enhanceReducer,\n            state => this._serialize(state),\n            state => this._deserialize(state)\n        );\n        store.addEnhancer(enhanceStore);\n\n        store.subscribe(() => this._onUpdate());\n        this.syncMethod = POST;\n        this.batchService = null;\n        this.batchSizeMin = 2;\n        this.batchSizeMax = 50;\n        this.applyState = ON_SUCCESS;\n        this.cleanOutbox = true;\n        this.maxRetries = 10;\n        this.csrftoken = null;\n        this.csrftokenField = 'csrfmiddlewaretoken';\n    }\n\n    init(opts) {\n        var optlist = [\n            // Default to store values but allow overriding\n            'service',\n            'formatKeyword',\n            'defaults',\n            'debugNetwork',\n            'debugValues',\n\n            // Outbox-specific options\n            'syncMethod',\n            'applyState',\n            'cleanOutbox',\n            'maxRetries',\n            'batchService',\n            'batchSizeMin',\n            'batchSizeMax',\n            'csrftokenField',\n\n            // Outbox functions\n            'validate',\n            'applyResult',\n            'updateModels'\n        ];\n\n        optlist.forEach(opt => {\n            if (this.store.hasOwnProperty(opt)) {\n                this[opt] = this.store[opt];\n            }\n            if (opts && opts.hasOwnProperty(opt)) {\n                this[opt] = opts[opt];\n            }\n        });\n\n        if (opts.parseBatchResult) {\n            throw new Error(\n                'parseBatchResult() no longer supported.  Use ajax() hook instead.'\n            );\n        }\n\n        if (this.cleanOutbox) {\n            // Clear out successfully synced items from previous runs, if any\n            // FIXME: should we hold up init until this is done?\n            this.loadItems()\n                .then(items => {\n                    this.removeItems(\n                        items.list\n                            .filter(\n                                item =>\n                                    item.synced ||\n                                    (item.options.storage === 'temporary' &&\n                                        !item.options.desiredStorage)\n                            )\n                            .map(item => item.id)\n                    );\n                })\n                .then(() => this._cleanUpItemData);\n        }\n\n        if (this.batchService) {\n            this.store.addThunk(BATCH_SUCCESS, (dispatch, getState, bag) =>\n                this._dispatchBatchResponse(bag.action, dispatch)\n            );\n            this.store.addThunk(BATCH_ERROR, (dispatch, getState, bag) =>\n                this._dispatchBatchResponse(bag.action, dispatch)\n            );\n        }\n    }\n\n    setCSRFToken(csrftoken) {\n        this.csrftoken = csrftoken;\n    }\n\n    // Queue data for server use; use outbox to cache unsynced items\n    async save(data, options, noSend) {\n        if (noSend) {\n            throw new Error(\n                'outbox.save() noSend arg no longer supported; use outbox.pause() instead'\n            );\n        }\n        if (options) {\n            options = { ...options };\n        } else {\n            options = {};\n        }\n        if (options.storage === 'inline') {\n            delete options.storage;\n        }\n        if (options.storage === 'temporary') {\n            options.once = true;\n        }\n        if (!this.validate(data, options)) {\n            return null;\n        }\n\n        // FIXME: What if next id changes during await?\n        const outboxId =\n            options.id ||\n            (this.store.getState().offline.lastTransaction || 0) + 1;\n        const item = await this._updateItemData({\n            id: outboxId,\n            data,\n            options\n        });\n        data = item.data;\n        options = item.options;\n\n        var currentId;\n        if (data && data.id) {\n            currentId = data.id;\n        } else if (options.url && options.modelConf && options.modelConf.url) {\n            const match = options.url.match(options.modelConf.url + '/(.+)');\n            if (match) {\n                if (!isNaN(+match[1])) {\n                    currentId = +match[1];\n                } else {\n                    currentId = match[1];\n                }\n            }\n        }\n\n        var type, payload, commitType, rollbackType;\n        const model = this._getModel(options.modelConf);\n        if (model) {\n            const applyState = options.applyState || this.applyState;\n\n            if (options.method === DELETE && currentId) {\n                if (applyState === ON_SUCCESS) {\n                    commitType = model.expandActionType(DELETE);\n                    type = commitType + SUBMIT;\n                    rollbackType = commitType + ERROR;\n                } else if (applyState === IMMEDIATE) {\n                    type = model.expandActionType(DELETE);\n                    commitType = type + SUCCESS;\n                    rollbackType = type + ERROR;\n                } else if (applyState === LOCAL_ONLY) {\n                    type = model.expandActionType(DELETE);\n                    commitType = null;\n                    rollbackType = null;\n                } else {\n                    throw new Error('Unknown applyState ' + applyState);\n                }\n                payload = currentId;\n            } else {\n                if (applyState === ON_SUCCESS) {\n                    type = model.expandActionType(SUBMIT);\n                    commitType = model.expandActionType(UPDATE);\n                    rollbackType = model.expandActionType(ERROR);\n                    payload = null;\n                } else if (applyState === IMMEDIATE) {\n                    type = model.expandActionType(UPDATE);\n                    commitType = model.expandActionType(SUCCESS);\n                    rollbackType = model.expandActionType(ERROR);\n                    payload = this._localUpdate(data, currentId, outboxId);\n                } else if (applyState === LOCAL_ONLY) {\n                    type = model.expandActionType(UPDATE);\n                    commitType = null;\n                    rollbackType = null;\n                    payload = this._localUpdate(data, currentId);\n                } else {\n                    throw new Error('Unknown applyState ' + applyState);\n                }\n            }\n        } else if (options.modelConf) {\n            const name = options.modelConf.name.toUpperCase();\n            type = `${name}_${SUBMIT}`;\n            commitType = `${name}_${SUCCESS}`;\n            rollbackType = `${name}_${ERROR}`;\n        } else {\n            type = FORM_SUBMIT;\n            commitType = FORM_SUCCESS;\n            rollbackType = FORM_ERROR;\n        }\n\n        if (commitType) {\n            this.store.dispatch({\n                type,\n                payload,\n                meta: {\n                    offline: {\n                        effect: { data, options },\n                        commit: { type: commitType },\n                        rollback: { type: rollbackType }\n                    }\n                }\n            });\n            const items = await this.loadItems();\n            // FIXME: Double check that this is the same record just submitted\n            return items.list[0];\n        } else {\n            this.store.dispatch({ type, payload });\n            return null;\n        }\n    }\n\n    _enqueue(array, action, context) {\n        const { offline } = action.meta,\n            { data, options } = offline.effect;\n        if (options.id) {\n            const exist = array.find(act => act.meta.outboxId === options.id);\n            if (exist) {\n                (options.preserve || []).forEach(field => {\n                    if (data[field] === undefined) {\n                        data[field] = exist.meta.offline.effect.data[field];\n                    }\n                });\n                array = array.filter(act => act.meta.outboxId !== options.id);\n            }\n        } else {\n            options.id = action.meta.transaction;\n        }\n        action.meta.outboxId = options.id;\n\n        if (!offline.commit) {\n            offline.commit = { type: `${action.type}_${SUCCESS}` };\n        }\n        if (!offline.commit.meta) {\n            offline.commit.meta = {};\n        }\n\n        if (!offline.rollback) {\n            offline.rollback = { type: `${action.type}_${ERROR}` };\n        }\n        if (!offline.rollback.meta) {\n            offline.rollback.meta = {};\n        }\n\n        // Copy action but exclude commit/rollback (to avoid recursive nesting)\n        const offlineAction = {\n            ...action,\n            meta: {\n                ...action.meta,\n                offline: {\n                    effect: offline.effect\n                }\n            }\n        };\n\n        offline.commit.meta.offlineAction = offlineAction;\n        offline.rollback.meta.offlineAction = offlineAction;\n\n        const currentId = action.payload && action.payload.id;\n        if (currentId) {\n            offline.commit.meta.currentId = currentId;\n            offline.rollback.meta.currentId = currentId;\n        }\n\n        Object.keys(data || {}).forEach(key => {\n            var match = data[key].match && data[key].match(/^outbox-(\\d+)$/);\n            if (match) {\n                if (!action.meta.parents) {\n                    action.meta.parents = [];\n                }\n                action.meta.parents.push(+match[1]);\n            }\n        });\n        return [...array, action];\n    }\n\n    // Validate a record before adding it to the outbox\n    validate(data, options) {\n        /* eslint no-unused-vars: off */\n        return true;\n    }\n\n    // Send a single item from the outbox to the server\n    sendItem() {\n        throw new Error(\n            'sendItem() no longer supported; use waitForItem() instead'\n        );\n    }\n    _peek(array, action, context) {\n        const pending = array.filter(act => {\n            if (act.meta.completed) {\n                return false;\n            }\n            if (act.meta.parents && act.meta.parents.length) {\n                return false;\n            }\n            return true;\n        });\n        if (\n            this.batchService &&\n            pending.length &&\n            pending.length >= this.batchSizeMin\n        ) {\n            const action = this._createBatchAction(\n                pending.slice(0, this.batchSizeMax)\n            );\n            if (action) {\n                return action;\n            }\n        }\n        return pending[0];\n    }\n    async _effect({ data, options }, action) {\n        const item = await this._loadItemData({\n            id: options.id,\n            data,\n            options\n        });\n        data = item.data;\n        var url = this.service;\n        if (options.url) {\n            url = url + '/' + options.url;\n        }\n        var method = options.method || this.syncMethod;\n        var headers = {};\n\n        // Use current CSRF token in case it's changed since item was saved\n        var csrftoken = this.csrftoken || options.csrftoken;\n        if (csrftoken) {\n            headers['X-CSRFToken'] = csrftoken;\n            if (!options.json) {\n                data = {\n                    ...data,\n                    [this.csrftokenField]: csrftoken\n                };\n            }\n        }\n\n        var defaults = { ...this.defaults };\n        if (defaults.format && !this.formatKeyword) {\n            url = url.replace(/\\/$/, '');\n            url += '.' + defaults.format;\n            delete defaults.format;\n        }\n        var urlObj = new URL(url, window.location.origin);\n        Object.entries(defaults).forEach(([key, value]) =>\n            urlObj.searchParams.append(key, value)\n        );\n\n        if (this.debugNetwork) {\n            console.log('Sending item to ' + urlObj.href);\n            if (this.debugValues) {\n                console.log(data);\n            }\n        }\n\n        if (options.json) {\n            headers['Content-Type'] = 'application/json';\n            data = JSON.stringify(data);\n        } else {\n            data = this._createFormData(data);\n        }\n        return this.store.ajax(urlObj, data, method, headers).then(res => {\n            if (!res && method === DELETE) {\n                return action.payload;\n            } else {\n                return res;\n            }\n        });\n    }\n\n    _createFormData(data) {\n        // Use a FormData object to submit\n        var formData = new FormData();\n        Object.entries(data).forEach(([key, val]) => {\n            if (Array.isArray(val)) {\n                val.forEach(appendValue.bind(this, key));\n            } else {\n                appendValue(key, val);\n            }\n        });\n\n        function appendValue(key, val) {\n            if (val && val.name && val.type && val.body) {\n                // File (Blob) record; add with filename\n                var blob = val.body;\n                if (!blob.type) {\n                    // Serialized blobs lose their type\n                    var slice = blob.slice || blob.webkitSlice;\n                    blob = slice.call(blob, 0, blob.size, val.type);\n                }\n                formData.append(key, blob, val.name);\n            } else {\n                // Add regular form fields\n                formData.append(key, val);\n            }\n        }\n\n        return formData;\n    }\n\n    _createBatchAction(actions) {\n        const loadEffect = action => {\n            const { effect } = action.meta.offline,\n                { options } = effect;\n            let data;\n            if (!options.storage) {\n                data = effect.data;\n            } else if (options.storage === 'temporary') {\n                data = this.#_memoryItems[options.id];\n            } else {\n                throw new Error(\n                    'Binary submissions not currently supported in batch mode.'\n                );\n            }\n            data = this._parseJsonForm({ data }).data;\n            return { data, options };\n        };\n\n        let effects;\n        try {\n            effects = actions.map(loadEffect);\n        } catch (e) {\n            console.warn(e);\n            return false;\n        }\n\n        return {\n            type: BATCH_SUBMIT,\n            meta: {\n                offline: {\n                    effect: {\n                        data: effects.map(effect => {\n                            const { data, options } = effect;\n                            return {\n                                url: this.store.service + '/' + options.url,\n                                method: options.method || this.syncMethod,\n                                headers: {\n                                    'Content-Type': 'application/json',\n                                    Accept: 'application/json',\n                                    'X-CSRFToken': this.csrftoken\n                                },\n                                body: JSON.stringify(data)\n                            };\n                        }),\n                        options: {\n                            url: this.batchService,\n                            json: true\n                        }\n                    },\n                    commit: {\n                        type: BATCH_SUCCESS,\n                        meta: { actions }\n                    },\n                    rollback: {\n                        type: BATCH_ERROR,\n                        meta: { actions }\n                    }\n                }\n            }\n        };\n    }\n\n    _processBatchResponse(batchAction) {\n        let responses, batchError;\n\n        if (batchAction.type == BATCH_SUCCESS) {\n            if (Array.isArray(batchAction.payload)) {\n                responses = batchAction.payload;\n            }\n        } else {\n            // batchAction.type == BATCH_ERROR\n            if (batchAction.payload) {\n                batchError = batchAction.payload;\n            } else {\n                batchError = new Error('Batch submission error');\n            }\n        }\n\n        return batchAction.meta.actions.map((action, i) => {\n            const resp = responses ? responses[i] : null,\n                { offline } = action.meta,\n                { commit, rollback } = offline;\n            let nextAction;\n            if (resp && resp.status_code >= 200 && resp.status_code <= 299) {\n                let payload;\n                try {\n                    payload = JSON.parse(resp.body);\n                } catch (e) {\n                    payload = resp.body;\n                }\n                nextAction = {\n                    ...commit,\n                    payload,\n                    meta: {\n                        ...commit.meta,\n                        success: true\n                    }\n                };\n            } else {\n                let error;\n                if (resp && resp.body) {\n                    error = new Error();\n                    try {\n                        error.json = JSON.parse(resp.body);\n                    } catch (e) {\n                        error.text = resp.body;\n                    }\n                    error.status = resp.status_code;\n                } else if (batchError) {\n                    error = batchError;\n                } else {\n                    error = new Error('Missing from batch response');\n                }\n                nextAction = {\n                    ...rollback,\n                    payload: error,\n                    meta: {\n                        ...rollback.meta,\n                        success: false\n                    }\n                };\n            }\n            return nextAction;\n        });\n    }\n\n    _dispatchBatchResponse(batchAction, dispatch) {\n        this._processBatchResponse(batchAction).forEach(nextAction => {\n            const action = {\n                ...nextAction,\n                meta: {\n                    ...nextAction.meta\n                }\n            };\n            // Avoid double-dequeue\n            delete action.meta.offlineAction;\n            dispatch(action);\n        });\n    }\n\n    _localUpdate(data, currentId, outboxId) {\n        data = this._parseJsonForm({ data }).data;\n        if (!data.hasOwnProperty('id')) {\n            if (currentId) {\n                data.id = currentId;\n            } else if (outboxId) {\n                data.id = 'outbox-' + outboxId;\n            }\n        }\n        return data;\n    }\n\n    _updateParents(item, outboxId, resultId) {\n        if (item.meta.parents.indexOf(outboxId) === -1) {\n            return item;\n        }\n        const data = { ...item.meta.offline.effect.data };\n        Object.keys(data).forEach(key => {\n            if (data[key] === 'outbox-' + outboxId) {\n                data[key] = resultId;\n            }\n        });\n        return {\n            ...item,\n            meta: {\n                ...item.meta,\n                offline: {\n                    ...item.meta.offline,\n                    effect: {\n                        ...item.meta.offline.effect,\n                        data\n                    }\n                },\n                parents: item.meta.parents.filter(pid => pid != outboxId)\n            }\n        };\n    }\n\n    _discard(error, action, retries) {\n        const { options } = action.meta.offline.effect;\n        if (this.debugNetwork) {\n            console.warn('Error sending item to ' + options.url);\n            console.error(error);\n        }\n\n        return defaultDiscard(error, action, retries || 0);\n    }\n\n    _retry(action, retries) {\n        const { options } = action.meta.offline.effect;\n        if (options.once) {\n            return null;\n        } else if (retries > this.maxRetries) {\n            return null;\n        }\n        return defaultRetry(action, retries);\n    }\n\n    removeItem(id) {\n        return this.removeItems([id]);\n    }\n\n    removeItems(ids) {\n        return this.store.dispatch({\n            type: REMOVE_ITEMS,\n            payload: ids,\n            meta: {\n                completed: true\n            }\n        });\n    }\n\n    async empty() {\n        this.store.dispatch({ type: RESET_STATE });\n        await this._cleanUpItemData();\n    }\n\n    retryItem(id) {\n        return this.retryItems([id]);\n    }\n\n    retryItems(ids) {\n        return this.store.dispatch({\n            type: RETRY_ITEMS,\n            payload: ids,\n            meta: {\n                completed: true\n            }\n        });\n    }\n\n    async retryAll() {\n        const unsynced = await this.unsyncedItems();\n        this.retryItems(unsynced.map(item => item.id));\n        await this.waitForAll();\n    }\n\n    sendAll() {\n        throw new Error(\n            'sendall() no longer supported; use retryAll() and/or waitForAll() instead'\n        );\n    }\n\n    _dequeue(array, action, context) {\n        if (action.type === REMOVE_ITEMS) {\n            return array.filter(\n                item => action.payload.indexOf(item.meta.outboxId) === -1\n            );\n        } else if (action.type === RETRY_ITEMS) {\n            return array.map(item => {\n                if (action.payload.indexOf(item.meta.outboxId) === -1) {\n                    return item;\n                } else {\n                    return {\n                        ...item,\n                        meta: {\n                            ...item.meta,\n                            completed: false,\n                            success: undefined\n                        }\n                    };\n                }\n            });\n        } else if (action.type == BATCH_SUCCESS || action.type == BATCH_ERROR) {\n            this._processBatchResponse(action).forEach(nextAction => {\n                array = this._dequeue(array, nextAction, context);\n            });\n            return array;\n        } else if (action.meta.offlineAction) {\n            // Mark status but don't remove item completely\n            const outboxId = action.meta.offlineAction.meta.outboxId;\n            if (!outboxId) {\n                return array;\n            }\n            return array.map(item => {\n                if (item.meta.outboxId === outboxId) {\n                    return this._applyResult(item, action);\n                } else if (item.meta.parents && action.meta.success) {\n                    return this._updateParents(\n                        item,\n                        outboxId,\n                        action.payload.id\n                    );\n                } else {\n                    return item;\n                }\n            });\n        } else {\n            return array;\n        }\n    }\n\n    pause() {\n        this.store.dispatch(busy(true));\n    }\n\n    resume() {\n        this.store.dispatch(busy(false));\n    }\n\n    #_waiting = {};\n    #_lastOutbox = [];\n\n    waitForAll() {\n        return this.waitForItem('ALL');\n    }\n\n    waitForItem(id) {\n        var resolve;\n        const promise = new Promise(res => (resolve = res));\n        if (!this.#_waiting[id]) {\n            this.#_waiting[id] = [];\n        }\n        this.#_waiting[id].push(resolve);\n        return promise;\n    }\n\n    async _onUpdate() {\n        const state = this.store.getState(),\n            { offline } = state,\n            { outbox } = offline;\n\n        if (outbox === this.#_lastOutbox) {\n            return;\n        }\n\n        const lastIds = {};\n        this.#_lastOutbox.forEach(action => {\n            lastIds[action.meta.offline.effect.options.id] = true;\n        });\n        this.#_lastOutbox = outbox;\n\n        const pending = await this._allPendingItems();\n        if (!pending.length && this.#_waiting['ALL']) {\n            this._resolveWaiting('ALL');\n        }\n\n        const pendingById = {};\n        pending.forEach(item => (pendingById[item.id] = true));\n\n        const checkIds = Object.keys(lastIds).concat(\n            Object.keys(this.#_waiting)\n        );\n        checkIds.forEach(id => {\n            if (!pendingById[id] && id != 'ALL') {\n                this._resolveWaiting(id);\n            }\n        });\n    }\n\n    async _resolveWaiting(id) {\n        const waiting = this.#_waiting[id];\n        if (!waiting && !(this.app && this.app.hasPlugin('onsync'))) {\n            return;\n        }\n        const item = id === 'ALL' ? null : await this.loadItem(+id);\n        if (this.app && id != 'ALL') {\n            this.app.callPlugins('onsync', [item]);\n        }\n        if (waiting) {\n            waiting.forEach(fn => fn(item));\n            delete this.#_waiting[id];\n        }\n    }\n\n    // Process service send() results\n    _applyResult(item, action) {\n        if (this.applyResult) {\n            console.warn('applyResult() override no longer called');\n        }\n        const newItem = {\n            ...item,\n            meta: {\n                ...item.meta,\n                success: action.meta.success,\n                completed: true\n            }\n        };\n        if (newItem.meta.success) {\n            if (this.debugNetwork) {\n                console.log(\n                    'Item successfully sent to ' +\n                        item.meta.offline.effect.options.url\n                );\n            }\n            newItem.meta.result = action.payload;\n        } else {\n            newItem.meta.error = action.payload;\n        }\n        return newItem;\n    }\n\n    _getModel(conf) {\n        if (!conf || !conf.name || !conf.list) {\n            return null;\n        }\n        return model({\n            store: this.store,\n            ...conf\n        });\n    }\n\n    async loadItems() {\n        const actions = this.store.getState().offline.outbox;\n        const items = actions\n            .map(action => {\n                const { data, options } = action.meta.offline.effect;\n                var item = {\n                    id: options.id,\n                    data: data,\n                    options: { ...options },\n                    synced: !!action.meta.success\n                };\n                delete item.options.id;\n                if (action.meta.parents) {\n                    item.parents = action.meta.parents;\n                }\n                if (action.meta.success) {\n                    item.result = action.meta.result;\n                } else if (action.meta.completed) {\n                    const error = action.meta.error;\n                    if (error) {\n                        item.error =\n                            error.json ||\n                            error.text ||\n                            error.status ||\n                            '' + error;\n                    } else {\n                        item.error = 'Error';\n                    }\n                }\n                return item;\n            })\n            .sort((a, b) => {\n                return b.id - a.id;\n            });\n        return {\n            list: items,\n            count: items.length,\n            pages: 1,\n            per_page: items.length\n        };\n    }\n\n    // Count of unsynced outbox items (never synced, or sync was unsuccessful)\n    async unsynced(modelConf) {\n        const items = await this.unsyncedItems(modelConf);\n        return items.length;\n    }\n\n    // Actual unsynced items\n    async unsyncedItems(modelConf, withData) {\n        var items = (await this.loadItems()).list.filter(item => !item.synced);\n\n        // Exclude temporary items from list\n        items = items.filter(item => {\n            if (item.options.storage == 'temporary') {\n                if (item.options.desiredStorage) {\n                    return true;\n                }\n                return false;\n            } else {\n                return true;\n            }\n        });\n\n        if (modelConf)\n            // Only match items corresponding to the specified list\n            items = items.filter(item => {\n                if (!item.options.modelConf) {\n                    return false;\n                }\n                for (var key in modelConf) {\n                    if (item.options.modelConf[key] != modelConf[key]) {\n                        return false;\n                    }\n                }\n                return true;\n            });\n\n        if (withData) {\n            return await Promise.all(\n                items.map(item => this._loadItemData(item))\n            );\n        } else {\n            return items;\n        }\n    }\n\n    // Unsynced items that have not been attempted (or retried)\n    async pendingItems(modelConf, withData) {\n        const unsynced = await this.unsyncedItems(modelConf, withData);\n        return unsynced.filter(item => {\n            return !item.hasOwnProperty('error');\n        });\n    }\n\n    async _pendingTempItems() {\n        return (await this.loadItems()).list.filter(item => {\n            return (\n                item.options.storage === 'temporary' &&\n                !item.synced &&\n                !item.error\n            );\n        });\n    }\n\n    async _allPendingItems() {\n        const pendingStore = await this.pendingItems(),\n            pendingTemp = await this._pendingTempItems();\n        return pendingStore.concat(pendingTemp);\n    }\n\n    async loadItem(itemId) {\n        var item = (await this.loadItems()).list.find(\n            item => item.id === itemId\n        );\n        item = await this._loadItemData(item);\n        return this._parseJsonForm(item);\n    }\n\n    #_memoryItems = {};\n    async _loadItemData(item) {\n        if (!item || !item.options || !item.options.storage) {\n            return item;\n        } else if (item.options.storage == 'temporary') {\n            return setData(item, this.#_memoryItems[item.id]);\n        } else {\n            return this.store.lf\n                .getItem('outbox_' + item.id)\n                .then(data => setData(item, data), () => setData(item, null));\n        }\n        function setData(obj, data) {\n            if (data) {\n                obj.data = data;\n            } else {\n                obj.label = '[Form Data Missing]';\n                obj.missing = true;\n            }\n            return obj;\n        }\n    }\n\n    _parseJsonForm(item) {\n        if (!item || !item.data) {\n            return item;\n        }\n        var values = [],\n            key;\n        for (key in item.data) {\n            values.push({\n                name: key,\n                value: item.data[key]\n            });\n        }\n        item.data = convert(values);\n        for (key in item.data) {\n            if (Array.isArray(item.data[key])) {\n                item.data[key].forEach((row, i) => {\n                    row['@index'] = i;\n                });\n            }\n        }\n        return item;\n    }\n\n    async _updateItemData(item) {\n        if (!item.data) {\n            return item;\n        }\n        if (!item.options || !item.options.storage) {\n            return item;\n        }\n        if (item.options.storage == 'temporary') {\n            this.#_memoryItems[item.id] = item.data;\n            return this._withoutData(item);\n        } else {\n            return this.store.lf.setItem('outbox_' + item.id, item.data).then(\n                () => this._withoutData(item),\n                () => {\n                    console.warn('could not save form contents to storage');\n                    item.options.desiredStorage = item.options.storage;\n                    item.options.storage = 'temporary';\n                    return this._updateItemData(item);\n                }\n            );\n        }\n    }\n\n    _withoutData(item) {\n        if (!item.data) {\n            return item;\n        }\n        if (!item.options || !item.options.storage) {\n            return item;\n        }\n        var obj = {};\n        Object.keys(item)\n            .filter(key => {\n                return key != 'data';\n            })\n            .forEach(key => {\n                obj[key] = item[key];\n            });\n        return obj;\n    }\n\n    async _cleanUpItemData() {\n        var validId = {};\n        const validItems = (await this.loadItems()).list;\n        validItems.forEach(item => {\n            validId[item.id] = true;\n        });\n        Object.keys(this.#_memoryItems).forEach(itemId => {\n            if (!validId[itemId]) {\n                delete this.#_memoryItems[itemId];\n            }\n        });\n        const keys = await this.store.lf.keys();\n        await Promise.all(\n            keys\n                .filter(key => key.indexOf('outbox_') === 0)\n                .map(key => key.replace('outbox_', ''))\n                .filter(itemId => !validId[itemId])\n                .map(itemId => this.store.lf.removeItem('outbox_' + itemId))\n        );\n    }\n\n    _serialize(state) {\n        return {\n            ...state,\n            outbox: state.outbox.map(action => this._serializeAction(action))\n        };\n    }\n    _serializeAction(action) {\n        if (!action.meta || !action.meta.error) {\n            return action;\n        }\n        var error = {};\n        ['json', 'text', 'status'].forEach(key => {\n            if (key in action.meta.error) {\n                error[key] = action.meta.error[key];\n            }\n        });\n        if (!Object.keys(error).length) {\n            error.text = '' + action.meta.error;\n        }\n        return {\n            ...action,\n            meta: {\n                ...action.meta,\n                error\n            }\n        };\n    }\n    _deserialize(state) {\n        return state;\n    }\n}\n\nvar outbox = new Outbox(ds);\n\nfunction getOutbox(store) {\n    if (_outboxes[store.name]) {\n        return _outboxes[store.name];\n    } else {\n        return new Outbox(store);\n    }\n}\n\noutbox.getOutbox = getOutbox;\n\nexport default outbox;\nexport { Outbox, getOutbox };\n"],"names":["defaultDiscard","offlineConfig","discard","defaultRetry","retry","REMOVE_ITEMS","RETRY_ITEMS","POST","DELETE","SUBMIT","SUCCESS","UPDATE","ERROR","FORM_SUBMIT","FORM_SUCCESS","FORM_ERROR","BATCH_SUBMIT","BATCH_SUCCESS","BATCH_ERROR","ON_SUCCESS","IMMEDIATE","LOCAL_ONLY","_outboxes","Outbox","store","name","outbox","createOffline","effect","action","_effect","error","retries","_discard","_retry","queue","enqueue","array","item","context","_enqueue","dequeue","_dequeue","peek","_peek","persist","middleware","enhanceReducer","enhanceStore","addMiddleware","addEnhanceReducer","state","_serialize","_deserialize","addEnhancer","subscribe","_onUpdate","syncMethod","batchService","batchSizeMin","batchSizeMax","applyState","cleanOutbox","maxRetries","csrftoken","csrftokenField","opts","optlist","forEach","opt","hasOwnProperty","parseBatchResult","Error","loadItems","then","items","removeItems","list","filter","synced","options","storage","desiredStorage","map","id","_cleanUpItemData","addThunk","dispatch","getState","bag","_dispatchBatchResponse","data","noSend","once","validate","outboxId","offline","lastTransaction","_updateItemData","currentId","url","modelConf","match","isNaN","model","_getModel","method","commitType","expandActionType","type","rollbackType","payload","_localUpdate","toUpperCase","meta","commit","rollback","exist","find","act","preserve","field","undefined","transaction","offlineAction","Object","keys","key","parents","push","pending","completed","length","_createBatchAction","slice","_loadItemData","service","headers","json","defaults","format","formatKeyword","replace","urlObj","URL","window","location","origin","entries","value","searchParams","append","debugNetwork","console","log","href","debugValues","JSON","stringify","_createFormData","ajax","res","formData","FormData","val","Array","isArray","appendValue","bind","body","blob","webkitSlice","call","size","actions","loadEffect","_parseJsonForm","effects","e","warn","Accept","batchAction","responses","batchError","i","resp","nextAction","status_code","parse","success","text","status","_processBatchResponse","resultId","indexOf","pid","ids","RESET_STATE","retryItems","unsyncedItems","unsynced","waitForAll","_applyResult","_updateParents","busy","waitForItem","resolve","promise","Promise","lastIds","_allPendingItems","_resolveWaiting","pendingById","checkIds","concat","waiting","app","hasPlugin","loadItem","callPlugins","fn","applyResult","newItem","result","conf","sort","a","b","count","pages","per_page","withData","all","pendingItems","pendingStore","_pendingTempItems","pendingTemp","itemId","setData","obj","label","missing","lf","getItem","values","convert","row","_withoutData","setItem","validId","validItems","removeItem","_serializeAction","ds","getOutbox"],"mappings":"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"}